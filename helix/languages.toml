[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
environment = { DENO_FUTURE = "1" }

[language-server.deno-lsp.config.deno]
enable = true

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.eslint.config.codeAction]
disableRuleComment = { enable = true, location = "separateLine" }
showDocumentation = { enable = false }

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

# [[language]]
# name = "typescript"
# shebangs = ["deno"]
# roots = ["deno.json", "deno.jsonc"]
# file-types = ["ts"]
# language-servers = ["deno-lsp", "gpt"]
# auto-format = true

[[language]]
name = "typescript"
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
language-servers = [ "typescript-language-server", "eslint", "gpt" ]
auto-format = true

[[language]]
name = "tsx"
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
language-servers = [ "typescript-language-server", "eslint", "gpt" ]
auto-format = true

[language-server.gpt]
command = "deno"
args = ["run", "--allow-net","--allow-env", "https://raw.githubusercontent.com/sigmaSd/helix-gpt/0.34-deno/src/app.ts"]
# HANDLER can be set to openai/copilot/codeium
environment = { HANDLER= "codeium" }
# CODEIUM_API_KEY="b6891ebb-91f2-483e-ae5e-2f8ea59b211"
