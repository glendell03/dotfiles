{"id":"37d14338-5dee-4744-a3ca-c2ee0f955145","zed":"context","version":"0.4.0","text":"\nDO NOT GIVE ME HIGH-LEVEL THEORY. IF I ASK FOR A FIX OR EXPLANATION, I WANT ACTUAL CODE OR EXPLANATION!!! I DON'T WANT \"Here's how you can blablabla\"\n\nBe casual unless otherwise specified\nBe terse and concise\nSuggest solutions that I didn’t think about—anticipate my needs\nTreat me as an expert\nBe accurate and thorough\nGive the answer immediately. Provide detailed explanations and restate my query in your own words if necessary after giving the answer\nValue good arguments over authorities, the source is irrelevant\nConsider new technologies and contrarian ideas, not just conventional wisdom\nYou may use high levels of speculation or prediction, just flag it for me\nNo moral lectures\nDiscuss safety only when it's crucial and non-obvious\nIf your content policy is an issue, provide the closest acceptable response and explain the content policy issue afterward\nCite sources whenever possible at the end, not inline\nNo need to mention your knowledge cutoff\nNo need to disclose you're an AI\nPlease respect my prettier preferences when you provide code\nSplit into multiple responses if one response isn't enough to answer the question\nFocus on readability over being performant\nFully implement all requested functionality\nLeave NO todos, placeholders, or missing pieces\n\n\n    You are an expert full-stack developer proficient in TypeScript, React, Next.js, and modern UI/UX frameworks (e.g., Tailwind CSS, Shadcn UI, Radix UI). Your task is to produce the most optimized and maintainable Next.js code, following best practices and adhering to the principles of clean code and robust architecture.\n    \n        ### Objective\n        - Create a Next.js solution that is not only functional but also adheres to the best practices in performance, security, and maintainability.\n    \n        ### Code Style and Structure\n        - Write concise, technical TypeScript code with accurate examples.\n        - Use functional and declarative programming patterns; avoid classes.\n        - Favor iteration and modularization over code duplication.\n        - Use descriptive variable names with auxiliary verbs (e.g., `isLoading`, `hasError`).\n        - Structure files with exported components, subcomponents, helpers, static content, and types.\n        - Use lowercase with dashes for directory names (e.g., `components/auth-wizard`).\n    \n        ### Optimization and Best Practices\n        - Minimize the use of `'use client'`, `useEffect`, and `setState`; favor React Server Components (RSC) and Next.js SSR features.\n        - Implement dynamic imports for code splitting and optimization.\n        - Use responsive design with a mobile-first approach.\n        - Optimize images: use WebP format, include size data, implement lazy loading.\n    \n        ### Error Handling and Validation\n        - Prioritize error handling and edge cases:\n          - Use early returns for error conditions.\n          - Implement guard clauses to handle preconditions and invalid states early.\n          - Use custom error types for consistent error handling.\n    \n        ### UI and Styling\n        - Use modern UI frameworks (e.g., Tailwind CSS, Shadcn UI, Radix UI) for styling.\n        - Implement consistent design and responsive patterns across platforms.\n    \n        ### State Management and Data Fetching\n        - Use modern state management solutions (e.g., Zustand, TanStack React Query) to handle global state and data fetching.\n        - Implement validation using Zod for schema validation.\n    \n        ### Security and Performance\n        - Implement proper error handling, user input validation, and secure coding practices.\n        - Follow performance optimization techniques, such as reducing load times and improving rendering efficiency.\n    \n        ### Testing and Documentation\n        - Write unit tests for components using Jest and React Testing Library.\n        - Provide clear and concise comments for complex logic.\n        - Use JSDoc comments for functions and components to improve IDE intellisense.\n    \n        ### Methodology\n        1. **System 2 Thinking**: Approach the problem with analytical rigor. Break down the requirements into smaller, manageable parts and thoroughly consider each step before implementation.\n        2. **Tree of Thoughts**: Evaluate multiple possible solutions and their consequences. Use a structured approach to explore different paths and select the optimal one.\n        3. **Iterative Refinement**: Before finalizing the code, consider improvements, edge cases, and optimizations. Iterate through potential enhancements to ensure the final solution is robust.\n    \n        **Process**:\n        1. **Deep Dive Analysis**: Begin by conducting a thorough analysis of the task at hand, considering the technical requirements and constraints.\n        2. **Planning**: Develop a clear plan that outlines the architectural structure and flow of the solution, using <PLANNING> tags if necessary.\n        3. **Implementation**: Implement the solution step-by-step, ensuring that each part adheres to the specified best practices.\n        4. **Review and Optimize**: Perform a review of the code, looking for areas of potential optimization and improvement.\n        5. **Finalization**: Finalize the code by ensuring it meets all requirements, is secure, and is performant.\n        \n```tsx dance-book-app/src/app/(public)/studio/[slug]/page.tsx\nimport { Suspense } from \"react\";\nimport { notFound } from \"next/navigation\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport {\n  MapPin,\n  Clock,\n  Calendar,\n  Users,\n  Music,\n  ArrowRight,\n} from \"lucide-react\";\nimport { Button } from \"~/components/ui/button\";\nimport { Card } from \"~/components/ui/card\";\nimport { Badge } from \"~/components/ui/badge\";\nimport { api } from \"~/trpc/server\";\nimport { formatAddress } from \"~/lib/format-address\";\nimport { formatOpeningHours } from \"~/lib/format-opening-hours\";\nimport { AnimatedTestimonials } from \"~/components/ui/animated-testimonials\";\n\ninterface StudioProfileProps {\n  slug: string;\n}\n\nasync function StudioProfile({ slug }: StudioProfileProps) {\n  const studio = await api.studio.findUnique({ slug });\n\n  if (!studio) {\n    notFound();\n  }\n\n  // Format opening hours if they exist\n  const formattedHours = studio.openingHours\n    ? formatOpeningHours(studio.openingHours)\n    : null;\n\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Studio Header */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center md:justify-between\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"relative h-20 w-20 overflow-hidden rounded-xl border border-neutral-200 bg-white shadow-sm dark:border-neutral-800 dark:bg-neutral-900 sm:h-24 sm:w-24\">\n              {studio.logo ? (\n                <Image\n                  src={studio.logo}\n                  alt={`${studio.name} logo`}\n                  fill\n                  className=\"object-cover\"\n                />\n              ) : (\n                <div className=\"flex h-full w-full items-center justify-center bg-neutral-100 dark:bg-neutral-800\">\n                  <span className=\"text-2xl font-bold text-neutral-500 dark:text-neutral-400\">\n                    {studio.name.charAt(0)}\n                  </span>\n                </div>\n              )}\n            </div>\n            <div>\n              <div className=\"flex items-center gap-3\">\n                <h1 className=\"text-3xl font-bold text-neutral-900 dark:text-white\">\n                  {studio.name}\n                </h1>\n                {studio.isActive && (\n                  <Badge\n                    variant=\"outline\"\n                    className=\"border-green-500 text-green-600 dark:text-green-400\"\n                  >\n                    Active\n                  </Badge>\n                )}\n              </div>\n              <p className=\"mt-1 text-neutral-600 dark:text-neutral-400\">\n                {studio.description || \"Welcome to our dance studio!\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <AnimatedTestimonials\n        testimonials={[\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n        ]}\n      />\n\n      {/* Bento Grid Layout - Rearranged order */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {/* Studio Atmosphere Card - Now first */}\n        <Card className=\"col-span-1 h-auto border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Music className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Studio Atmosphere\n            </h3>\n          </div>\n          <p className=\"line-clamp-3 text-neutral-700 dark:text-neutral-300\">\n            Experience a welcoming environment with state-of-the-art facilities,\n            professional sound systems, and spacious dance floors.\n          </p>\n          <div className=\"mt-4 grid grid-cols-3 gap-2\">\n            {[...Array(3)].map((_, i) => (\n              <div\n                key={i}\n                className=\"aspect-square overflow-hidden rounded-lg bg-neutral-100 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-neutral-400 dark:text-neutral-600\">\n                  <span className=\"text-xs\">Image</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Location Card - Now second */}\n        <Card className=\"col-span-1 flex h-auto flex-col justify-between border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <MapPin className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Location\n              </h3>\n            </div>\n            <div className=\"text-neutral-700 dark:text-neutral-300\">\n              <p className=\"font-medium\">{formatAddress(studio)}</p>\n              {studio.countryName && (\n                <p className=\"mt-1 text-sm text-neutral-500 dark:text-neutral-400\">\n                  {studio.stateName || \"\"} {studio.countryName}\n                </p>\n              )}\n            </div>\n          </div>\n          <a\n            href={`https://maps.google.com/?q=${formatAddress(studio)}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mt-4 inline-block text-sm font-medium text-indigo-600 hover:text-indigo-700 hover:underline dark:text-indigo-400 dark:hover:text-indigo-300\"\n          >\n            View on map →\n          </a>\n        </Card>\n\n        {/* Professional Instructors Card - Now third */}\n        <Card className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Users className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Professional Instructors\n            </h3>\n          </div>\n          <p className=\"text-neutral-700 dark:text-neutral-300\">\n            Learn from our team of experienced and passionate dance instructors,\n            each specialized in their own dance styles.\n          </p>\n          <div className=\"mt-4 flex -space-x-3\">\n            {[...Array(4)].map((_, i) => (\n              <div\n                key={i}\n                className=\"relative h-10 w-10 overflow-hidden rounded-full border-2 border-white bg-neutral-100 dark:border-neutral-900 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-sm font-medium text-neutral-500 dark:text-neutral-400\">\n                  {String.fromCharCode(65 + i)}\n                </div>\n              </div>\n            ))}\n            <div className=\"relative flex h-10 w-10 items-center justify-center rounded-full border-2 border-white bg-indigo-100 text-sm font-medium text-indigo-600 dark:border-neutral-900 dark:bg-indigo-900 dark:text-indigo-300\">\n              +3\n            </div>\n          </div>\n        </Card>\n\n        {/* Opening Hours Card - Now last */}\n        <Card className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Opening Hours\n              </h3>\n            </div>\n            {formattedHours ? (\n              <div className=\"text-neutral-700 dark:text-neutral-300\">\n                <div className=\"max-h-[200px] overflow-y-auto pr-2\">\n                  {formattedHours.map((day) => (\n                    <div key={day.day} className=\"flex justify-between py-1\">\n                      <span className=\"font-medium\">{day.day}</span>\n                      <span className=\"text-right\">{day.hours}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <p className=\"text-neutral-600 dark:text-neutral-400\">\n                Hours not available\n              </p>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      {/* Option 2: Full-width button at the bottom */}\n      <div className=\"mt-10\">\n        <Link href={`/studio/${slug}/schedules`}>\n          <Button className=\"group relative w-full overflow-hidden bg-indigo-600 py-7 text-lg font-medium text-white transition-all hover:bg-indigo-700 dark:bg-indigo-700 dark:hover:bg-indigo-600\">\n            <span className=\"flex items-center justify-center gap-3\">\n              <Calendar className=\"h-5 w-5\" />\n              <span>Discover Dance Classes</span>\n              <ArrowRight className=\"h-5 w-5 transition-transform duration-300 group-hover:translate-x-2\" />\n            </span>\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\ntype StudioPageProps = {\n  params: {\n    slug: string;\n  };\n};\n\nexport default async function StudioPage({ params }: StudioPageProps) {\n  const { slug } = params;\n\n  // Prefetch the data to improve performance\n  await api.studio.findUnique.prefetch({ slug });\n\n  return (\n    <main className=\"min-h-screen bg-white dark:bg-neutral-950\">\n      <Suspense fallback={<StudioProfileSkeleton />}>\n        <StudioProfile slug={slug} />\n      </Suspense>\n    </main>\n  );\n}\n\nfunction StudioProfileSkeleton() {\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Header Skeleton */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"h-20 w-20 animate-pulse rounded-xl bg-neutral-200 dark:bg-neutral-800 sm:h-24 sm:w-24\" />\n            <div>\n              <div className=\"h-8 w-48 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"mt-2 h-4 w-64 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Classes Card Skeleton */}\n      <div className=\"mb-6 h-24 animate-pulse rounded-xl border border-neutral-200 bg-neutral-200 dark:border-neutral-800 dark:bg-neutral-800\" />\n\n      {/* Bento Grid Skeleton */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {[...Array(4)].map((_, i) => (\n          <div\n            key={i}\n            className=\"h-auto animate-pulse rounded-xl border border-neutral-200 p-6 dark:border-neutral-800\"\n          >\n            <div className=\"mb-4 flex items-center gap-2\">\n              <div className=\"h-5 w-5 rounded-full bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"h-5 w-24 rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(2)].map((_, j) => (\n                <div\n                  key={j}\n                  className=\"h-4 w-full rounded bg-neutral-200 dark:bg-neutral-800\"\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Button Skeleton at bottom */}\n      <div className=\"mt-10 h-14 animate-pulse rounded-md bg-neutral-200 dark:bg-neutral-800\" />\n    </div>\n  );\n}\n```\n\npage.tsx:236 A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch\n\n  ...\n    <StudioPage>\n      <main className=\"min-h-scre...\">\n        <Suspense fallback={<div>}>\n          <StudioProfile>\n            <div className=\"mx-auto ma...\">\n              <div>\n              <AnimatedTestimonials testimonials={[...]}>\n                <div className=\"mx-auto ma...\">\n                  <div className=\"relative g...\">\n                    <div>\n                      <div className=\"relative h...\">\n                        <AnimatePresence>\n                          <PresenceChild isPresent={true} initial={undefined} custom={undefined} ...>\n                            <motion.div initial={{opacity:0, ...}} animate={{opacity:1,scale:1,z:0, ...}} ...>\n                              <div\n                                className=\"absolute inset-0 origin-bottom\"\n                                style={{\n+                                 opacity: 0\n-                                 opacity: \"0\"\n+                                 transform: \"translateZ(-100px) scale(0.9) rotate(2deg)\"\n-                                 transform: \"translateZ(-100px) scale(0.9) rotate(3deg)\"\n                                }}\n                                ref={function useMotionRef.useCallback}\n                              >\n                    ...\n              ...\n    ...\ndance-book-app/src/components/ui\n```tsx dance-book-app/src/components/ui/alert-dialog.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"~/lib/utils\"\nimport { buttonVariants } from \"~/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n```\n\n```tsx dance-book-app/src/components/ui/animated-testimonials.tsx\n\"use client\";\n\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\n\ntype Testimonial = {\n  quote: string;\n  name: string;\n  designation: string;\n  src: string;\n};\nexport const AnimatedTestimonials = ({\n  testimonials,\n  autoplay = false,\n}: {\n  testimonials: Testimonial[];\n  autoplay?: boolean;\n}) => {\n  const [active, setActive] = useState(0);\n\n  const handleNext = () => {\n    setActive((prev) => (prev + 1) % testimonials.length);\n  };\n\n  const handlePrev = () => {\n    setActive((prev) => (prev - 1 + testimonials.length) % testimonials.length);\n  };\n\n  const isActive = (index: number) => {\n    return index === active;\n  };\n\n  useEffect(() => {\n    if (autoplay) {\n      const interval = setInterval(handleNext, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [autoplay]);\n\n  const randomRotateY = () => {\n    return Math.floor(Math.random() * 21) - 10;\n  };\n  return (\n    <div className=\"mx-auto max-w-sm px-4 py-20 font-sans antialiased md:max-w-4xl md:px-8 lg:px-12\">\n      <div className=\"relative grid grid-cols-1 gap-20 md:grid-cols-2\">\n        <div>\n          <div className=\"relative h-80 w-full\">\n            <AnimatePresence>\n              {testimonials.map((testimonial, index) => (\n                <motion.div\n                  key={testimonial.src}\n                  initial={{\n                    opacity: 0,\n                    scale: 0.9,\n                    z: -100,\n                    rotate: randomRotateY(),\n                  }}\n                  animate={{\n                    opacity: isActive(index) ? 1 : 0.7,\n                    scale: isActive(index) ? 1 : 0.95,\n                    z: isActive(index) ? 0 : -100,\n                    rotate: isActive(index) ? 0 : randomRotateY(),\n                    zIndex: isActive(index)\n                      ? 999\n                      : testimonials.length + 2 - index,\n                    y: isActive(index) ? [0, -80, 0] : 0,\n                  }}\n                  exit={{\n                    opacity: 0,\n                    scale: 0.9,\n                    z: 100,\n                    rotate: randomRotateY(),\n                  }}\n                  transition={{\n                    duration: 0.4,\n                    ease: \"easeInOut\",\n                  }}\n                  className=\"absolute inset-0 origin-bottom\"\n                >\n                  <Image\n                    src={testimonial.src}\n                    alt={testimonial.name}\n                    width={500}\n                    height={500}\n                    draggable={false}\n                    className=\"h-full w-full rounded-3xl object-cover object-center\"\n                  />\n                </motion.div>\n              ))}\n            </AnimatePresence>\n          </div>\n        </div>\n        <div className=\"flex flex-col justify-between py-4\">\n          <motion.div\n            key={active}\n            initial={{\n              y: 20,\n              opacity: 0,\n            }}\n            animate={{\n              y: 0,\n              opacity: 1,\n            }}\n            exit={{\n              y: -20,\n              opacity: 0,\n            }}\n            transition={{\n              duration: 0.2,\n              ease: \"easeInOut\",\n            }}\n          >\n            <h3 className=\"text-2xl font-bold text-black dark:text-white\">\n              {testimonials[active].name}\n            </h3>\n            <p className=\"text-sm text-gray-500 dark:text-neutral-500\">\n              {testimonials[active].designation}\n            </p>\n            <motion.p className=\"mt-8 text-lg text-gray-500 dark:text-neutral-300\">\n              {testimonials[active].quote.split(\" \").map((word, index) => (\n                <motion.span\n                  key={index}\n                  initial={{\n                    filter: \"blur(10px)\",\n                    opacity: 0,\n                    y: 5,\n                  }}\n                  animate={{\n                    filter: \"blur(0px)\",\n                    opacity: 1,\n                    y: 0,\n                  }}\n                  transition={{\n                    duration: 0.2,\n                    ease: \"easeInOut\",\n                    delay: 0.02 * index,\n                  }}\n                  className=\"inline-block\"\n                >\n                  {word}&nbsp;\n                </motion.span>\n              ))}\n            </motion.p>\n          </motion.div>\n          <div className=\"flex gap-4 pt-12 md:pt-0\">\n            <button\n              onClick={handlePrev}\n              className=\"group/button flex h-7 w-7 items-center justify-center rounded-full bg-gray-100 dark:bg-neutral-800\"\n            >\n              <ChevronLeft className=\"h-5 w-5 text-black transition-transform duration-300 group-hover/button:rotate-12 dark:text-neutral-400\" />\n            </button>\n            <button\n              onClick={handleNext}\n              className=\"group/button flex h-7 w-7 items-center justify-center rounded-full bg-gray-100 dark:bg-neutral-800\"\n            >\n              <ChevronRight className=\"h-5 w-5 text-black transition-transform duration-300 group-hover/button:-rotate-12 dark:text-neutral-400\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n```\n\n```tsx dance-book-app/src/components/ui/avatar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n```\n\n```tsx dance-book-app/src/components/ui/badge.tsx\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n```\n\n```tsx dance-book-app/src/components/ui/breadcrumb.tsx\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n```\n\n```tsx dance-book-app/src/components/ui/button.tsx\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n```\n\n```tsx dance-book-app/src/components/ui/calendar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"~/lib/utils\"\nimport { buttonVariants } from \"~/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start: \"day-range-start\",\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n```\n\n```tsx dance-book-app/src/components/ui/card.tsx\nimport * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n```\n\n```tsx dance-book-app/src/components/ui/collapsible.tsx\n\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n```\n\n```tsx dance-book-app/src/components/ui/command.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\nimport { Dialog, DialogContent } from \"~/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n```\n\n```tsx dance-book-app/src/components/ui/dialog.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n```\n\n```tsx dance-book-app/src/components/ui/drawer.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n```\n\n```tsx dance-book-app/src/components/ui/dropdown-menu.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n```\n\n```tsx dance-book-app/src/components/ui/form.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport type * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"~/lib/utils\"\nimport { Label } from \"~/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n```\n\n```tsx dance-book-app/src/components/ui/hover-card.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n```\n\n```tsx dance-book-app/src/components/ui/input.tsx\nimport * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n```\n\n```tsx dance-book-app/src/components/ui/label.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n```\n\n```tsx dance-book-app/src/components/ui/popover.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverAnchor = PopoverPrimitive.Anchor\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n```\n\n```tsx dance-book-app/src/components/ui/progress.tsx\n\"use client\";\n\nimport * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"~/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className,\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value ?? 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n```\n\n```tsx dance-book-app/src/components/ui/scroll-area.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n```\n\n```tsx dance-book-app/src/components/ui/select.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n```\n\n```tsx dance-book-app/src/components/ui/separator.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n```\n\n```tsx dance-book-app/src/components/ui/sheet.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n```\n\n```tsx dance-book-app/src/components/ui/sidebar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { type VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"~/hooks/use-mobile\"\nimport { cn } from \"~/lib/utils\"\nimport { Button } from \"~/components/ui/button\"\nimport { Input } from \"~/components/ui/input\"\nimport { Separator } from \"~/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"~/components/ui/sheet\"\nimport { Skeleton } from \"~/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"~/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n```\n\n```tsx dance-book-app/src/components/ui/skeleton.tsx\nimport { cn } from \"~/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n```\n\n```tsx dance-book-app/src/components/ui/sonner.tsx\n\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n```\n\n```tsx dance-book-app/src/components/ui/switch.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n```\n\n```tsx dance-book-app/src/components/ui/tabs.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n```\n\n```tsx dance-book-app/src/components/ui/textarea.tsx\nimport * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n```\n\n```tsx dance-book-app/src/components/ui/tooltip.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n```\n\n\ngot this error because i imported the animated-testimonials ocmponent\n\nIt looks like you're seeing a hydration mismatch error between the server and client rendering of the `AnimatedTestimonials` component. This is happening specifically in the animation transforms, where the server is rendering with certain numeric values that are being rendered as strings on the client.\n\nHere's how to fix the issue:\n\n```tsx\n// src/components/ui/animated-testimonials.tsx\n\n// Fix the issue by ensuring consistent transform values\nconst randomRotateY = () => {\n  // Return a number instead of using Math.random() each time\n  // This ensures server and client renders are consistent\n  return 2; // Use a fixed number instead of random\n};\n\n// Then in your motion.div:\n<motion.div\n  key={testimonial.src}\n  initial={{\n    opacity: 0,\n    scale: 0.9,\n    z: -100,\n    rotate: randomRotateY(),\n  }}\n  animate={{\n    // Ensure all values are numbers, not strings\n    opacity: isActive(index) ? 1 : 0.7, \n    scale: isActive(index) ? 1 : 0.95,\n    z: isActive(index) ? 0 : -100,\n    rotate: isActive(index) ? 0 : randomRotateY(),\n    zIndex: isActive(index) ? 999 : testimonials.length + 2 - index,\n    y: isActive(index) ? [0, -80, 0] : 0,\n  }}\n  // ...\n```\n\nThe root cause is that the `randomRotateY()` function generates different values during server-side rendering versus client-side hydration. To solve this properly:\n\n1. Either make the entire component client-only by adding `\"use client\"` at the top (which you already have), or\n2. Use a deterministic value for animations instead of random values\n3. Add a key to force remounting after hydration\n\nSince this is a client component with animations, consider using a client-side-only rendering approach:\n\n```tsx\n// In your page.tsx\nimport dynamic from 'next/dynamic'\n\nconst AnimatedTestimonials = dynamic(\n  () => import('~/components/ui/animated-testimonials').then(mod => mod.AnimatedTestimonials),\n  { ssr: false } // This ensures it only renders on the client\n)\n```\n\nThis way, the component won't be rendered during server-side rendering, avoiding the hydration mismatch completely.\n{ ssr: false } this is not allowed in server side rendering \ni  dont want to make the whole page as client \nYou're right. When using React Server Components in Next.js, you can't use `{ ssr: false }` within a server component. Let's solve this more appropriately.\n\nHere's a better solution:\n\n1. Create a client boundary specifically for the testimonials section:\n\n```tsx\n// src/components/client/animated-testimonials-wrapper.tsx\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { AnimatedTestimonials } from \"~/components/ui/animated-testimonials\";\nimport type { Testimonial } from \"~/components/ui/animated-testimonials\";\n\nexport function AnimatedTestimonialsWrapper({\n  testimonials,\n}: {\n  testimonials: Testimonial[];\n}) {\n  // Use this state pattern to prevent hydration mismatch\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Return a placeholder with the same dimensions during SSR\n  if (!isMounted) {\n    return (\n      <div className=\"mx-auto max-w-sm px-4 py-20 font-sans antialiased md:max-w-4xl md:px-8 lg:px-12\">\n        <div className=\"relative grid grid-cols-1 gap-20 md:grid-cols-2\">\n          <div className=\"h-80 w-full bg-neutral-100 dark:bg-neutral-800 rounded-3xl\" />\n          <div className=\"flex flex-col justify-between py-4\">\n            <div className=\"space-y-4\">\n              <div className=\"h-8 w-1/2 bg-neutral-200 dark:bg-neutral-700 rounded\" />\n              <div className=\"h-4 w-1/4 bg-neutral-200 dark:bg-neutral-700 rounded\" />\n              <div className=\"h-20 w-full mt-8 bg-neutral-200 dark:bg-neutral-700 rounded\" />\n            </div>\n            <div className=\"flex gap-4 pt-12 md:pt-0\">\n              <div className=\"h-7 w-7 rounded-full bg-neutral-200 dark:bg-neutral-700\" />\n              <div className=\"h-7 w-7 rounded-full bg-neutral-200 dark:bg-neutral-700\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return <AnimatedTestimonials testimonials={testimonials} />;\n}\n```\n\n2. Then use this wrapper in your page.tsx file:\n\n```tsx\n// In your page.tsx\nimport { AnimatedTestimonialsWrapper } from \"~/components/client/animated-testimonials-wrapper\";\n\n// ...\n\n<AnimatedTestimonialsWrapper \n  testimonials={[\n    {\n      quote: \"Welcome to our dance studio!\",\n      name: \"User Name\",\n      designation: \"asdasdas\",\n      src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n    },\n  ]}\n/>\n```\n\nThis approach:\n\n1. Creates a client boundary that handles the hydration mismatch\n2. Provides a placeholder with similar dimensions during server-side rendering\n3. Only mounts the animated component on the client side after hydration\n4. Keeps your page as a server component while isolating the client component\n\nThis is a common pattern for handling animations in React Server Components - using a thin client wrapper that conditionally renders the animated content only after hydration is complete.\n```tsx dance-book-app/src/app/(public)/studio/[slug]/page.tsx\nimport { Suspense } from \"react\";\nimport { notFound } from \"next/navigation\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport {\n  MapPin,\n  Clock,\n  Calendar,\n  Users,\n  Music,\n  ArrowRight,\n} from \"lucide-react\";\nimport { Button } from \"~/components/ui/button\";\nimport { Card } from \"~/components/ui/card\";\nimport { Badge } from \"~/components/ui/badge\";\nimport { api } from \"~/trpc/server\";\nimport { formatAddress } from \"~/lib/format-address\";\nimport { formatOpeningHours } from \"~/lib/format-opening-hours\";\nimport { AnimatedTestimonialsWrapper } from \"~/components/client/animated-testimonials-wrapper\";\nimport { Carousel } from \"~/components/ui/apple-cards-carousel\";\n\ninterface StudioProfileProps {\n  slug: string;\n}\n\nasync function StudioProfile({ slug }: StudioProfileProps) {\n  const studio = await api.studio.findUnique({ slug });\n\n  if (!studio) {\n    notFound();\n  }\n\n  // Format opening hours if they exist\n  const formattedHours = studio.openingHours\n    ? formatOpeningHours(studio.openingHours)\n    : null;\n\n  const cards = [{src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\"}].map((card, index) => (\n    <Card key={card.src} card={card} index={index} layout={true} />\n  ));\n\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Studio Header */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center md:justify-between\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"relative h-20 w-20 overflow-hidden rounded-xl border border-neutral-200 bg-white shadow-sm dark:border-neutral-800 dark:bg-neutral-900 sm:h-24 sm:w-24\">\n              {studio.logo ? (\n                <Image\n                  src={studio.logo}\n                  alt={`${studio.name} logo`}\n                  fill\n                  className=\"object-cover\"\n                />\n              ) : (\n                <div className=\"flex h-full w-full items-center justify-center bg-neutral-100 dark:bg-neutral-800\">\n                  <span className=\"text-2xl font-bold text-neutral-500 dark:text-neutral-400\">\n                    {studio.name.charAt(0)}\n                  </span>\n                </div>\n              )}\n            </div>\n            <div>\n              <div className=\"flex items-center gap-3\">\n                <h1 className=\"text-3xl font-bold text-neutral-900 dark:text-white\">\n                  {studio.name}\n                </h1>\n                {studio.isActive && (\n                  <Badge\n                    variant=\"outline\"\n                    className=\"border-green-500 text-green-600 dark:text-green-400\"\n                  >\n                    Active\n                  </Badge>\n                )}\n              </div>\n              <p className=\"mt-1 text-neutral-600 dark:text-neutral-400\">\n                {studio.description || \"Welcome to our dance studio!\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <AnimatedTestimonialsWrapper\n        testimonials={[\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n        ]}\n      />\n\n      <Carousel />\n\n      {/* Bento Grid Layout - Rearranged order */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {/* Studio Atmosphere Card - Now first */}\n        <Card className=\"col-span-1 h-auto border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Music className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Studio Atmosphere\n            </h3>\n          </div>\n          <p className=\"line-clamp-3 text-neutral-700 dark:text-neutral-300\">\n            Experience a welcoming environment with state-of-the-art facilities,\n            professional sound systems, and spacious dance floors.\n          </p>\n          <div className=\"mt-4 grid grid-cols-3 gap-2\">\n            {[...Array(3)].map((_, i) => (\n              <div\n                key={i}\n                className=\"aspect-square overflow-hidden rounded-lg bg-neutral-100 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-neutral-400 dark:text-neutral-600\">\n                  <span className=\"text-xs\">Image</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Location Card - Now second */}\n        <Card className=\"col-span-1 flex h-auto flex-col justify-between border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <MapPin className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Location\n              </h3>\n            </div>\n            <div className=\"text-neutral-700 dark:text-neutral-300\">\n              <p className=\"font-medium\">{formatAddress(studio)}</p>\n              {studio.countryName && (\n                <p className=\"mt-1 text-sm text-neutral-500 dark:text-neutral-400\">\n                  {studio.stateName || \"\"} {studio.countryName}\n                </p>\n              )}\n            </div>\n          </div>\n          <a\n            href={`https://maps.google.com/?q=${formatAddress(studio)}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mt-4 inline-block text-sm font-medium text-indigo-600 hover:text-indigo-700 hover:underline dark:text-indigo-400 dark:hover:text-indigo-300\"\n          >\n            View on map →\n          </a>\n        </Card>\n\n        {/* Professional Instructors Card - Now third */}\n        <Card className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Users className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Professional Instructors\n            </h3>\n          </div>\n          <p className=\"text-neutral-700 dark:text-neutral-300\">\n            Learn from our team of experienced and passionate dance instructors,\n            each specialized in their own dance styles.\n          </p>\n          <div className=\"mt-4 flex -space-x-3\">\n            {[...Array(4)].map((_, i) => (\n              <div\n                key={i}\n                className=\"relative h-10 w-10 overflow-hidden rounded-full border-2 border-white bg-neutral-100 dark:border-neutral-900 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-sm font-medium text-neutral-500 dark:text-neutral-400\">\n                  {String.fromCharCode(65 + i)}\n                </div>\n              </div>\n            ))}\n            <div className=\"relative flex h-10 w-10 items-center justify-center rounded-full border-2 border-white bg-indigo-100 text-sm font-medium text-indigo-600 dark:border-neutral-900 dark:bg-indigo-900 dark:text-indigo-300\">\n              +3\n            </div>\n          </div>\n        </Card>\n\n        {/* Opening Hours Card - Now last */}\n        <Card className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Opening Hours\n              </h3>\n            </div>\n            {formattedHours ? (\n              <div className=\"text-neutral-700 dark:text-neutral-300\">\n                <div className=\"max-h-[200px] overflow-y-auto pr-2\">\n                  {formattedHours.map((day) => (\n                    <div key={day.day} className=\"flex justify-between py-1\">\n                      <span className=\"font-medium\">{day.day}</span>\n                      <span className=\"text-right\">{day.hours}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <p className=\"text-neutral-600 dark:text-neutral-400\">\n                Hours not available\n              </p>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      {/* Option 2: Full-width button at the bottom */}\n      <div className=\"mt-10\">\n        <Link href={`/studio/${slug}/schedules`}>\n          <Button className=\"group relative w-full overflow-hidden bg-indigo-600 py-7 text-lg font-medium text-white transition-all hover:bg-indigo-700 dark:bg-indigo-700 dark:hover:bg-indigo-600\">\n            <span className=\"flex items-center justify-center gap-3\">\n              <Calendar className=\"h-5 w-5\" />\n              <span>Discover Dance Classes</span>\n              <ArrowRight className=\"h-5 w-5 transition-transform duration-300 group-hover:translate-x-2\" />\n            </span>\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\ntype StudioPageProps = {\n  params: {\n    slug: string;\n  };\n};\n\nexport default async function StudioPage({ params }: StudioPageProps) {\n  const { slug } = params;\n\n  // Prefetch the data to improve performance\n  await api.studio.findUnique.prefetch({ slug });\n\n  return (\n    <main className=\"min-h-screen bg-white dark:bg-neutral-950\">\n      <Suspense fallback={<StudioProfileSkeleton />}>\n        <StudioProfile slug={slug} />\n      </Suspense>\n    </main>\n  );\n}\n\nfunction StudioProfileSkeleton() {\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Header Skeleton */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"h-20 w-20 animate-pulse rounded-xl bg-neutral-200 dark:bg-neutral-800 sm:h-24 sm:w-24\" />\n            <div>\n              <div className=\"h-8 w-48 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"mt-2 h-4 w-64 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Classes Card Skeleton */}\n      <div className=\"mb-6 h-24 animate-pulse rounded-xl border border-neutral-200 bg-neutral-200 dark:border-neutral-800 dark:bg-neutral-800\" />\n\n      {/* Bento Grid Skeleton */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {[...Array(4)].map((_, i) => (\n          <div\n            key={i}\n            className=\"h-auto animate-pulse rounded-xl border border-neutral-200 p-6 dark:border-neutral-800\"\n          >\n            <div className=\"mb-4 flex items-center gap-2\">\n              <div className=\"h-5 w-5 rounded-full bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"h-5 w-24 rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(2)].map((_, j) => (\n                <div\n                  key={j}\n                  className=\"h-4 w-full rounded bg-neutral-200 dark:bg-neutral-800\"\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Button Skeleton at bottom */}\n      <div className=\"mt-10 h-14 animate-pulse rounded-md bg-neutral-200 dark:bg-neutral-800\" />\n    </div>\n  );\n}\n```\n\n```tsx dance-book-app/src/components/ui/apple-cards-carousel.tsx\n\"use client\";\nimport React, {\n  useEffect,\n  useRef,\n  useState,\n  createContext,\n  useContext,\n} from \"react\";\nimport { X, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { cn } from \"~/lib/utils\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport Image, { type ImageProps } from \"next/image\";\nimport { useOutsideClick } from \"~/hooks/use-outside-click\";\n\ninterface CarouselProps {\n  items: JSX.Element[];\n  initialScroll?: number;\n}\n\ntype Card = {\n  src: string;\n  title: string;\n  category: string;\n  content: React.ReactNode;\n};\n\nexport const CarouselContext = createContext<{\n  onCardClose: (index: number) => void;\n  currentIndex: number;\n}>({\n  onCardClose: () => {},\n  currentIndex: 0,\n});\n\nexport const Carousel = ({ items, initialScroll = 0 }: CarouselProps) => {\n  const carouselRef = React.useRef<HTMLDivElement>(null);\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(true);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollLeft = initialScroll;\n      checkScrollability();\n    }\n  }, [initialScroll]);\n\n  const checkScrollability = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current;\n      setCanScrollLeft(scrollLeft > 0);\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth);\n    }\n  };\n\n  const scrollLeft = () => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({ left: -300, behavior: \"smooth\" });\n    }\n  };\n\n  const scrollRight = () => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({ left: 300, behavior: \"smooth\" });\n    }\n  };\n\n  const handleCardClose = (index: number) => {\n    if (carouselRef.current) {\n      const cardWidth = isMobile() ? 230 : 384; // (md:w-96)\n      const gap = isMobile() ? 4 : 8;\n      const scrollPosition = (cardWidth + gap) * (index + 1);\n      carouselRef.current.scrollTo({\n        left: scrollPosition,\n        behavior: \"smooth\",\n      });\n      setCurrentIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window && window.innerWidth < 768;\n  };\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClose: handleCardClose, currentIndex }}\n    >\n      <div className=\"relative w-full\">\n        <div\n          className=\"flex w-full overflow-x-scroll overscroll-x-auto scroll-smooth py-10 [scrollbar-width:none] md:py-20\"\n          ref={carouselRef}\n          onScroll={checkScrollability}\n        >\n          <div\n            className={cn(\n              \"absolute right-0 z-[1000] h-auto w-[5%] overflow-hidden bg-gradient-to-l\",\n            )}\n          ></div>\n\n          <div\n            className={cn(\n              \"flex flex-row justify-start gap-4 pl-4\",\n              \"mx-auto max-w-7xl\", // remove max-w-4xl if you want the carousel to span the full width of its container\n            )}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                initial={{\n                  opacity: 0,\n                  y: 20,\n                }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: {\n                    duration: 0.5,\n                    delay: 0.2 * index,\n                    ease: \"easeOut\",\n                    once: true,\n                  },\n                }}\n                key={\"card\" + index}\n                className=\"rounded-3xl last:pr-[5%] md:last:pr-[33%]\"\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n        <div className=\"mr-10 flex justify-end gap-2\">\n          <button\n            className=\"relative z-40 flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 disabled:opacity-50\"\n            onClick={scrollLeft}\n            disabled={!canScrollLeft}\n          >\n            <ChevronLeft className=\"h-6 w-6 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 disabled:opacity-50\"\n            onClick={scrollRight}\n            disabled={!canScrollRight}\n          >\n            <ChevronRight className=\"h-6 w-6 text-gray-500\" />\n          </button>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  );\n};\n\nexport const Card = ({\n  card,\n  index,\n  layout = false,\n}: {\n  card: Card;\n  index: number;\n  layout?: boolean;\n}) => {\n  const [open, setOpen] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { onCardClose, currentIndex } = useContext(CarouselContext);\n\n  useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (event.key === \"Escape\") {\n        handleClose();\n      }\n    }\n\n    if (open) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\n  }, [open]);\n\n  useOutsideClick(containerRef, () => handleClose());\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    onCardClose(index);\n  };\n\n  return (\n    <>\n      <AnimatePresence>\n        {open && (\n          <div className=\"fixed inset-0 z-50 h-screen overflow-auto\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 h-full w-full bg-black/80 backdrop-blur-lg\"\n            />\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              ref={containerRef}\n              layoutId={layout ? `card-${card.title}` : undefined}\n              className=\"relative z-[60] mx-auto my-10 h-fit max-w-5xl rounded-3xl bg-white p-4 font-sans dark:bg-neutral-900 md:p-10\"\n            >\n              <button\n                className=\"sticky right-0 top-4 ml-auto flex h-8 w-8 items-center justify-center rounded-full bg-black dark:bg-white\"\n                onClick={handleClose}\n              >\n                <X className=\"h-6 w-6 text-neutral-100 dark:text-neutral-900\" />\n              </button>\n              <motion.p\n                layoutId={layout ? `category-${card.title}` : undefined}\n                className=\"text-base font-medium text-black dark:text-white\"\n              >\n                {card.category}\n              </motion.p>\n              <motion.p\n                layoutId={layout ? `title-${card.title}` : undefined}\n                className=\"mt-4 text-2xl font-semibold text-neutral-700 dark:text-white md:text-5xl\"\n              >\n                {card.title}\n              </motion.p>\n              <div className=\"py-10\">{card.content}</div>\n            </motion.div>\n          </div>\n        )}\n      </AnimatePresence>\n      <motion.button\n        layoutId={layout ? `card-${card.title}` : undefined}\n        onClick={handleOpen}\n        className=\"relative z-10 flex h-80 w-56 flex-col items-start justify-start overflow-hidden rounded-3xl bg-gray-100 dark:bg-neutral-900 md:h-[40rem] md:w-96\"\n      >\n        <div className=\"pointer-events-none absolute inset-x-0 top-0 z-30 h-full bg-gradient-to-b from-black/50 via-transparent to-transparent\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.category}` : undefined}\n            className=\"text-left font-sans text-sm font-medium text-white md:text-base\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.title}` : undefined}\n            className=\"mt-2 max-w-xs text-left font-sans text-xl font-semibold text-white [text-wrap:balance] md:text-3xl\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={card.src}\n          alt={card.title}\n          fill\n          className=\"absolute inset-0 z-10 object-cover\"\n        />\n      </motion.button>\n    </>\n  );\n};\n\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true);\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className,\n      )}\n      onLoad={() => setLoading(false)}\n      src={src}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  );\n};\n```\n\ncould you please help me create a dummy data for the carousel the image src should be the same \nI'll help you create a dummy data structure for the carousel. We'll use the same image source for all cards to keep it consistent.\n\nFirst, let's create the `AnimatedTestimonialsWrapper` component:\n\n```tsx\n// src/components/client/animated-testimonials-wrapper.tsx\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { AnimatedTestimonials } from \"~/components/ui/animated-testimonials\";\nimport type { Testimonial } from \"~/components/ui/animated-testimonials\";\n\nexport function AnimatedTestimonialsWrapper({\n  testimonials,\n}: {\n  testimonials: Testimonial[];\n}) {\n  // Use this state pattern to prevent hydration mismatch\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Return a placeholder with the same dimensions during SSR\n  if (!isMounted) {\n    return (\n      <div className=\"mx-auto max-w-sm px-4 py-20 font-sans antialiased md:max-w-4xl md:px-8 lg:px-12\">\n        <div className=\"relative grid grid-cols-1 gap-20 md:grid-cols-2\">\n          <div className=\"h-80 w-full bg-neutral-100 dark:bg-neutral-800 rounded-3xl\" />\n          <div className=\"flex flex-col justify-between py-4\">\n            <div className=\"space-y-4\">\n              <div className=\"h-8 w-1/2 bg-neutral-200 dark:bg-neutral-700 rounded\" />\n              <div className=\"h-4 w-1/4 bg-neutral-200 dark:bg-neutral-700 rounded\" />\n              <div className=\"h-20 w-full mt-8 bg-neutral-200 dark:bg-neutral-700 rounded\" />\n            </div>\n            <div className=\"flex gap-4 pt-12 md:pt-0\">\n              <div className=\"h-7 w-7 rounded-full bg-neutral-200 dark:bg-neutral-700\" />\n              <div className=\"h-7 w-7 rounded-full bg-neutral-200 dark:bg-neutral-700\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return <AnimatedTestimonials testimonials={testimonials} />;\n}\n```\n\nNow, let's modify your page.tsx to include proper dummy data for the carousel:\n\n```tsx\n// In your page.tsx file\n\n// The same image for all cards\nconst dummyImageSrc = \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\";\n\n// Create dummy data for carousel\nconst carouselItems = [\n  {\n    src: dummyImageSrc,\n    title: \"Hip Hop Dance Class\",\n    category: \"Weekly Classes\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Join our energetic hip hop classes where you'll learn modern dance moves and techniques.\n          Perfect for beginners and intermediate dancers looking to improve their style.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Every Tuesday and Thursday evening, led by our expert instructors with years of experience\n          in competitive hip hop.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Ballet Fundamentals\",\n    category: \"Beginner Series\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Learn the foundations of classical ballet in our beginner-friendly course.\n          Focus on proper technique, posture, and basic movements.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          A six-week program designed to build confidence and grace in every dancer.\n          No previous experience required.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Latin Dance Workshop\",\n    category: \"Special Event\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Immerse yourself in the passionate world of Latin dance with our weekend workshop.\n          Covering salsa, bachata, and merengue in a fun, welcoming environment.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Bring a partner or come solo - we'll make sure everyone has a great time and learns\n          the essential rhythms and steps of Latin dance.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Contemporary Fusion\",\n    category: \"Advanced Class\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Explore the boundaries of movement in our contemporary fusion class. Combining elements\n          of modern, jazz, and ballet into expressive choreography.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          For intermediate and advanced dancers looking to challenge themselves and develop\n          their unique style and artistic voice.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Kids Dance Classes\",\n    category: \"Youth Program\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Give your child the gift of dance with our specially designed youth program.\n          Fun, engaging sessions that develop coordination, confidence, and creativity.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Age-appropriate classes for children 5-12, focusing on fundamentals across multiple\n          dance styles in a supportive, encouraging environment.\n        </p>\n      </div>\n    ),\n  },\n];\n\n// Then in your StudioProfile component:\nconst cards = carouselItems.map((card, index) => (\n  <Card key={index} card={card} index={index} layout={true} />\n));\n\n// And render the carousel:\n<Carousel items={cards} />\n```\n\nWith these changes:\n\n1. We've created the `AnimatedTestimonialsWrapper` to handle hydration mismatches with the testimonials component\n2. We've added detailed dummy data for the carousel with the same image source\n3. Each card has unique title, category, and content to make the carousel more realistic\n4. All cards use the same image source as you requested\n\nThis approach should work well for your needs while avoiding the hydration mismatch issues. The carousel will display properly and each card will show detailed content when clicked.\n```tsx dance-book-app/src/app/(public)/studio/[slug]/page.tsx\nimport { Suspense } from \"react\";\nimport { notFound } from \"next/navigation\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport {\n  MapPin,\n  Clock,\n  Calendar,\n  Users,\n  Music,\n  ArrowRight,\n} from \"lucide-react\";\nimport { Button } from \"~/components/ui/button\";\nimport { Card } from \"~/components/ui/card\";\nimport { Badge } from \"~/components/ui/badge\";\nimport { api } from \"~/trpc/server\";\nimport { formatAddress } from \"~/lib/format-address\";\nimport { formatOpeningHours } from \"~/lib/format-opening-hours\";\nimport { AnimatedTestimonialsWrapper } from \"~/components/client/animated-testimonials-wrapper\";\nimport { Carousel } from \"~/components/ui/apple-cards-carousel\";\n\ninterface StudioProfileProps {\n  slug: string;\n}\n\nconst dummyImageSrc =\n  \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\";\n\nconst carouselItems = [\n  {\n    src: dummyImageSrc,\n    title: \"Hip Hop Dance Class\",\n    category: \"Weekly Classes\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Join our energetic hip hop classes where you'll learn modern dance\n          moves and techniques. Perfect for beginners and intermediate dancers\n          looking to improve their style.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Every Tuesday and Thursday evening, led by our expert instructors with\n          years of experience in competitive hip hop.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Ballet Fundamentals\",\n    category: \"Beginner Series\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Learn the foundations of classical ballet in our beginner-friendly\n          course. Focus on proper technique, posture, and basic movements.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          A six-week program designed to build confidence and grace in every\n          dancer. No previous experience required.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Latin Dance Workshop\",\n    category: \"Special Event\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Immerse yourself in the passionate world of Latin dance with our\n          weekend workshop. Covering salsa, bachata, and merengue in a fun,\n          welcoming environment.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Bring a partner or come solo - we'll make sure everyone has a great\n          time and learns the essential rhythms and steps of Latin dance.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Contemporary Fusion\",\n    category: \"Advanced Class\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Explore the boundaries of movement in our contemporary fusion class.\n          Combining elements of modern, jazz, and ballet into expressive\n          choreography.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          For intermediate and advanced dancers looking to challenge themselves\n          and develop their unique style and artistic voice.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Kids Dance Classes\",\n    category: \"Youth Program\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Give your child the gift of dance with our specially designed youth\n          program. Fun, engaging sessions that develop coordination, confidence,\n          and creativity.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Age-appropriate classes for children 5-12, focusing on fundamentals\n          across multiple dance styles in a supportive, encouraging environment.\n        </p>\n      </div>\n    ),\n  },\n];\n\nasync function StudioProfile({ slug }: StudioProfileProps) {\n  const studio = await api.studio.findUnique({ slug });\n\n  if (!studio) {\n    notFound();\n  }\n\n  // Format opening hours if they exist\n  const formattedHours = studio.openingHours\n    ? formatOpeningHours(studio.openingHours)\n    : null;\n\n  const cards = carouselItems.map((card, index) => (\n    <Card key={card.src} card={card} index={index} layout={true} />\n  ));\n\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Studio Header */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center md:justify-between\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"relative h-20 w-20 overflow-hidden rounded-xl border border-neutral-200 bg-white shadow-sm dark:border-neutral-800 dark:bg-neutral-900 sm:h-24 sm:w-24\">\n              {studio.logo ? (\n                <Image\n                  src={studio.logo}\n                  alt={`${studio.name} logo`}\n                  fill\n                  className=\"object-cover\"\n                />\n              ) : (\n                <div className=\"flex h-full w-full items-center justify-center bg-neutral-100 dark:bg-neutral-800\">\n                  <span className=\"text-2xl font-bold text-neutral-500 dark:text-neutral-400\">\n                    {studio.name.charAt(0)}\n                  </span>\n                </div>\n              )}\n            </div>\n            <div>\n              <div className=\"flex items-center gap-3\">\n                <h1 className=\"text-3xl font-bold text-neutral-900 dark:text-white\">\n                  {studio.name}\n                </h1>\n                {studio.isActive && (\n                  <Badge\n                    variant=\"outline\"\n                    className=\"border-green-500 text-green-600 dark:text-green-400\"\n                  >\n                    Active\n                  </Badge>\n                )}\n              </div>\n              <p className=\"mt-1 text-neutral-600 dark:text-neutral-400\">\n                {studio.description || \"Welcome to our dance studio!\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <AnimatedTestimonialsWrapper\n        testimonials={[\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n        ]}\n      />\n\n      <Carousel />\n\n      {/* Bento Grid Layout - Rearranged order */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {/* Studio Atmosphere Card - Now first */}\n        <Card className=\"col-span-1 h-auto border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Music className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Studio Atmosphere\n            </h3>\n          </div>\n          <p className=\"line-clamp-3 text-neutral-700 dark:text-neutral-300\">\n            Experience a welcoming environment with state-of-the-art facilities,\n            professional sound systems, and spacious dance floors.\n          </p>\n          <div className=\"mt-4 grid grid-cols-3 gap-2\">\n            {[...Array(3)].map((_, i) => (\n              <div\n                key={i}\n                className=\"aspect-square overflow-hidden rounded-lg bg-neutral-100 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-neutral-400 dark:text-neutral-600\">\n                  <span className=\"text-xs\">Image</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n\n        {/* Location Card - Now second */}\n        <Card className=\"col-span-1 flex h-auto flex-col justify-between border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <MapPin className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Location\n              </h3>\n            </div>\n            <div className=\"text-neutral-700 dark:text-neutral-300\">\n              <p className=\"font-medium\">{formatAddress(studio)}</p>\n              {studio.countryName && (\n                <p className=\"mt-1 text-sm text-neutral-500 dark:text-neutral-400\">\n                  {studio.stateName || \"\"} {studio.countryName}\n                </p>\n              )}\n            </div>\n          </div>\n          <a\n            href={`https://maps.google.com/?q=${formatAddress(studio)}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mt-4 inline-block text-sm font-medium text-indigo-600 hover:text-indigo-700 hover:underline dark:text-indigo-400 dark:hover:text-indigo-300\"\n          >\n            View on map →\n          </a>\n        </Card>\n\n        {/* Professional Instructors Card - Now third */}\n        <Card className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Users className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Professional Instructors\n            </h3>\n          </div>\n          <p className=\"text-neutral-700 dark:text-neutral-300\">\n            Learn from our team of experienced and passionate dance instructors,\n            each specialized in their own dance styles.\n          </p>\n          <div className=\"mt-4 flex -space-x-3\">\n            {[...Array(4)].map((_, i) => (\n              <div\n                key={i}\n                className=\"relative h-10 w-10 overflow-hidden rounded-full border-2 border-white bg-neutral-100 dark:border-neutral-900 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-sm font-medium text-neutral-500 dark:text-neutral-400\">\n                  {String.fromCharCode(65 + i)}\n                </div>\n              </div>\n            ))}\n            <div className=\"relative flex h-10 w-10 items-center justify-center rounded-full border-2 border-white bg-indigo-100 text-sm font-medium text-indigo-600 dark:border-neutral-900 dark:bg-indigo-900 dark:text-indigo-300\">\n              +3\n            </div>\n          </div>\n        </Card>\n\n        {/* Opening Hours Card - Now last */}\n        <Card className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Opening Hours\n              </h3>\n            </div>\n            {formattedHours ? (\n              <div className=\"text-neutral-700 dark:text-neutral-300\">\n                <div className=\"max-h-[200px] overflow-y-auto pr-2\">\n                  {formattedHours.map((day) => (\n                    <div key={day.day} className=\"flex justify-between py-1\">\n                      <span className=\"font-medium\">{day.day}</span>\n                      <span className=\"text-right\">{day.hours}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <p className=\"text-neutral-600 dark:text-neutral-400\">\n                Hours not available\n              </p>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      {/* Option 2: Full-width button at the bottom */}\n      <div className=\"mt-10\">\n        <Link href={`/studio/${slug}/schedules`}>\n          <Button className=\"group relative w-full overflow-hidden bg-indigo-600 py-7 text-lg font-medium text-white transition-all hover:bg-indigo-700 dark:bg-indigo-700 dark:hover:bg-indigo-600\">\n            <span className=\"flex items-center justify-center gap-3\">\n              <Calendar className=\"h-5 w-5\" />\n              <span>Discover Dance Classes</span>\n              <ArrowRight className=\"h-5 w-5 transition-transform duration-300 group-hover:translate-x-2\" />\n            </span>\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\ntype StudioPageProps = {\n  params: {\n    slug: string;\n  };\n};\n\nexport default async function StudioPage({ params }: StudioPageProps) {\n  const { slug } = params;\n\n  // Prefetch the data to improve performance\n  await api.studio.findUnique.prefetch({ slug });\n\n  return (\n    <main className=\"min-h-screen bg-white dark:bg-neutral-950\">\n      <Suspense fallback={<StudioProfileSkeleton />}>\n        <StudioProfile slug={slug} />\n      </Suspense>\n    </main>\n  );\n}\n\nfunction StudioProfileSkeleton() {\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Header Skeleton */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"h-20 w-20 animate-pulse rounded-xl bg-neutral-200 dark:bg-neutral-800 sm:h-24 sm:w-24\" />\n            <div>\n              <div className=\"h-8 w-48 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"mt-2 h-4 w-64 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Classes Card Skeleton */}\n      <div className=\"mb-6 h-24 animate-pulse rounded-xl border border-neutral-200 bg-neutral-200 dark:border-neutral-800 dark:bg-neutral-800\" />\n\n      {/* Bento Grid Skeleton */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {[...Array(4)].map((_, i) => (\n          <div\n            key={i}\n            className=\"h-auto animate-pulse rounded-xl border border-neutral-200 p-6 dark:border-neutral-800\"\n          >\n            <div className=\"mb-4 flex items-center gap-2\">\n              <div className=\"h-5 w-5 rounded-full bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"h-5 w-24 rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(2)].map((_, j) => (\n                <div\n                  key={j}\n                  className=\"h-4 w-full rounded bg-neutral-200 dark:bg-neutral-800\"\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Button Skeleton at bottom */}\n      <div className=\"mt-10 h-14 animate-pulse rounded-md bg-neutral-200 dark:bg-neutral-800\" />\n    </div>\n  );\n}\n```\n\n```tsx dance-book-app/src/components/ui/apple-cards-carousel.tsx\n\"use client\";\nimport React, {\n  useEffect,\n  useRef,\n  useState,\n  createContext,\n  useContext,\n} from \"react\";\nimport { X, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { cn } from \"~/lib/utils\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport Image, { type ImageProps } from \"next/image\";\nimport { useOutsideClick } from \"~/hooks/use-outside-click\";\n\ninterface CarouselProps {\n  items: JSX.Element[];\n  initialScroll?: number;\n}\n\ntype Card = {\n  src: string;\n  title: string;\n  category: string;\n  content: React.ReactNode;\n};\n\nexport const CarouselContext = createContext<{\n  onCardClose: (index: number) => void;\n  currentIndex: number;\n}>({\n  onCardClose: () => {},\n  currentIndex: 0,\n});\n\nexport const Carousel = ({ items, initialScroll = 0 }: CarouselProps) => {\n  const carouselRef = React.useRef<HTMLDivElement>(null);\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(true);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollLeft = initialScroll;\n      checkScrollability();\n    }\n  }, [initialScroll]);\n\n  const checkScrollability = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current;\n      setCanScrollLeft(scrollLeft > 0);\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth);\n    }\n  };\n\n  const scrollLeft = () => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({ left: -300, behavior: \"smooth\" });\n    }\n  };\n\n  const scrollRight = () => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({ left: 300, behavior: \"smooth\" });\n    }\n  };\n\n  const handleCardClose = (index: number) => {\n    if (carouselRef.current) {\n      const cardWidth = isMobile() ? 230 : 384; // (md:w-96)\n      const gap = isMobile() ? 4 : 8;\n      const scrollPosition = (cardWidth + gap) * (index + 1);\n      carouselRef.current.scrollTo({\n        left: scrollPosition,\n        behavior: \"smooth\",\n      });\n      setCurrentIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window && window.innerWidth < 768;\n  };\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClose: handleCardClose, currentIndex }}\n    >\n      <div className=\"relative w-full\">\n        <div\n          className=\"flex w-full overflow-x-scroll overscroll-x-auto scroll-smooth py-10 [scrollbar-width:none] md:py-20\"\n          ref={carouselRef}\n          onScroll={checkScrollability}\n        >\n          <div\n            className={cn(\n              \"absolute right-0 z-[1000] h-auto w-[5%] overflow-hidden bg-gradient-to-l\",\n            )}\n          ></div>\n\n          <div\n            className={cn(\n              \"flex flex-row justify-start gap-4 pl-4\",\n              \"mx-auto max-w-7xl\", // remove max-w-4xl if you want the carousel to span the full width of its container\n            )}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                initial={{\n                  opacity: 0,\n                  y: 20,\n                }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: {\n                    duration: 0.5,\n                    delay: 0.2 * index,\n                    ease: \"easeOut\",\n                    once: true,\n                  },\n                }}\n                key={\"card\" + index}\n                className=\"rounded-3xl last:pr-[5%] md:last:pr-[33%]\"\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n        <div className=\"mr-10 flex justify-end gap-2\">\n          <button\n            className=\"relative z-40 flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 disabled:opacity-50\"\n            onClick={scrollLeft}\n            disabled={!canScrollLeft}\n          >\n            <ChevronLeft className=\"h-6 w-6 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 disabled:opacity-50\"\n            onClick={scrollRight}\n            disabled={!canScrollRight}\n          >\n            <ChevronRight className=\"h-6 w-6 text-gray-500\" />\n          </button>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  );\n};\n\nexport const Card = ({\n  card,\n  index,\n  layout = false,\n}: {\n  card: Card;\n  index: number;\n  layout?: boolean;\n}) => {\n  const [open, setOpen] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { onCardClose, currentIndex } = useContext(CarouselContext);\n\n  useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (event.key === \"Escape\") {\n        handleClose();\n      }\n    }\n\n    if (open) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\n  }, [open]);\n\n  useOutsideClick(containerRef, () => handleClose());\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    onCardClose(index);\n  };\n\n  return (\n    <>\n      <AnimatePresence>\n        {open && (\n          <div className=\"fixed inset-0 z-50 h-screen overflow-auto\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 h-full w-full bg-black/80 backdrop-blur-lg\"\n            />\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              ref={containerRef}\n              layoutId={layout ? `card-${card.title}` : undefined}\n              className=\"relative z-[60] mx-auto my-10 h-fit max-w-5xl rounded-3xl bg-white p-4 font-sans dark:bg-neutral-900 md:p-10\"\n            >\n              <button\n                className=\"sticky right-0 top-4 ml-auto flex h-8 w-8 items-center justify-center rounded-full bg-black dark:bg-white\"\n                onClick={handleClose}\n              >\n                <X className=\"h-6 w-6 text-neutral-100 dark:text-neutral-900\" />\n              </button>\n              <motion.p\n                layoutId={layout ? `category-${card.title}` : undefined}\n                className=\"text-base font-medium text-black dark:text-white\"\n              >\n                {card.category}\n              </motion.p>\n              <motion.p\n                layoutId={layout ? `title-${card.title}` : undefined}\n                className=\"mt-4 text-2xl font-semibold text-neutral-700 dark:text-white md:text-5xl\"\n              >\n                {card.title}\n              </motion.p>\n              <div className=\"py-10\">{card.content}</div>\n            </motion.div>\n          </div>\n        )}\n      </AnimatePresence>\n      <motion.button\n        layoutId={layout ? `card-${card.title}` : undefined}\n        onClick={handleOpen}\n        className=\"relative z-10 flex h-80 w-56 flex-col items-start justify-start overflow-hidden rounded-3xl bg-gray-100 dark:bg-neutral-900 md:h-[40rem] md:w-96\"\n      >\n        <div className=\"pointer-events-none absolute inset-x-0 top-0 z-30 h-full bg-gradient-to-b from-black/50 via-transparent to-transparent\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.category}` : undefined}\n            className=\"text-left font-sans text-sm font-medium text-white md:text-base\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.title}` : undefined}\n            className=\"mt-2 max-w-xs text-left font-sans text-xl font-semibold text-white [text-wrap:balance] md:text-3xl\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={card.src}\n          alt={card.title}\n          fill\n          className=\"absolute inset-0 z-10 object-cover\"\n        />\n      </motion.button>\n    </>\n  );\n};\n\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true);\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className,\n      )}\n      onLoad={() => setLoading(false)}\n      src={src}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  );\n};\n```\n\nwe are now working with the apple cards carousel\ndiagnostics\ndance-book-app/src/lib/format-opening-hours.ts\n```typescript\nexport function formatOpeningHours(hours: unknown): FormattedDay[] {\n  // Handle the case where hours might be a string (from JSON.stringify)\n  const openingHours: OpeningHoursType =\n// error: Unsafe assignment of an `any` value.\n    typeof hours === \"string\" ? JSON.parse(hours) : (hours as OpeningHoursType);\n\n  if (!openingHours || typeof openingHours !== \"object\") {\n```\ndance-book-app/src/components/ui/apple-cards-carousel.tsx\n```tsx\n  currentIndex: number;\n}>({\n  onCardClose: () => {},\n// error: Unexpected empty method 'onCardClose'.\n  currentIndex: 0,\n});\n```\ndance-book-app/src/app/(public)/studio/[slug]/page.tsx\n```tsx\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Join our energetic hip hop classes where you'll learn modern dance\n// error: `'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.\n          moves and techniques. Perfect for beginners and intermediate dancers\n          looking to improve their style.\n```\n```tsx\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Bring a partner or come solo - we'll make sure everyone has a great\n// error: `'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.\n          time and learns the essential rhythms and steps of Latin dance.\n        </p>\n```\n```tsx\n\n  const cards = carouselItems.map((card, index) => (\n    <Card key={card.src} card={card} index={index} layout={true} />\n// error: Type '{ key: string; card: { src: string; title: string; category: string; content: Element; }; index: number; layout: boolean; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.\n//          Property 'card' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.\n  ));\n\n```\n```tsx\n              </div>\n              <p className=\"mt-1 text-neutral-600 dark:text-neutral-400\">\n                {studio.description || \"Welcome to our dance studio!\"}\n// error: Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.\n              </p>\n            </div>\n```\n```tsx\n      />\n\n      <Carousel />\n// error: Property 'items' is missing in type '{}' but required in type 'CarouselProps'.\n\n      {/* Bento Grid Layout - Rearranged order */}\n```\n```tsx\n          </p>\n          <div className=\"mt-4 grid grid-cols-3 gap-2\">\n            {[...Array(3)].map((_, i) => (\n// error: Unsafe spread of an `any` value in an array.\n              <div\n                key={i}\n```\n```tsx\n              {studio.countryName && (\n                <p className=\"mt-1 text-sm text-neutral-500 dark:text-neutral-400\">\n                  {studio.stateName || \"\"} {studio.countryName}\n// error: Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.\n                </p>\n              )}\n```\n```tsx\n          </p>\n          <div className=\"mt-4 flex -space-x-3\">\n            {[...Array(4)].map((_, i) => (\n// error: Unsafe spread of an `any` value in an array.\n              <div\n                key={i}\n```\n```tsx\n      {/* Bento Grid Skeleton */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {[...Array(4)].map((_, i) => (\n// error: Unsafe spread of an `any` value in an array.\n          <div\n            key={i}\n```\n```tsx\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(2)].map((_, j) => (\n// error: Unsafe spread of an `any` value in an array.\n                <div\n                  key={j}\n```\ndance-book-app/src/app/(public)/studio/[slug]/page.tsx\n```tsx\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Join our energetic hip hop classes where you'll learn modern dance\n// error: `'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.\n          moves and techniques. Perfect for beginners and intermediate dancers\n          looking to improve their style.\n```\n```tsx\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Bring a partner or come solo - we'll make sure everyone has a great\n// error: `'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.\n          time and learns the essential rhythms and steps of Latin dance.\n        </p>\n```\n```tsx\n\n  const cards = carouselItems.map((card, index) => (\n    <Card key={card.src} card={card} index={index} layout={true} />\n// error: Type '{ key: string; card: { src: string; title: string; category: string; content: Element; }; index: number; layout: boolean; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.\n//          Property 'card' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.\n  ));\n\n```\n```tsx\n              </div>\n              <p className=\"mt-1 text-neutral-600 dark:text-neutral-400\">\n                {studio.description || \"Welcome to our dance studio!\"}\n// error: Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.\n              </p>\n            </div>\n```\n```tsx\n      />\n\n      <Carousel />\n// error: Property 'items' is missing in type '{}' but required in type 'CarouselProps'.\n\n      {/* Bento Grid Layout - Rearranged order */}\n```\n```tsx\n          </p>\n          <div className=\"mt-4 grid grid-cols-3 gap-2\">\n            {[...Array(3)].map((_, i) => (\n// error: Unsafe spread of an `any` value in an array.\n              <div\n                key={i}\n```\n```tsx\n              {studio.countryName && (\n                <p className=\"mt-1 text-sm text-neutral-500 dark:text-neutral-400\">\n                  {studio.stateName || \"\"} {studio.countryName}\n// error: Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.\n                </p>\n              )}\n```\n```tsx\n          </p>\n          <div className=\"mt-4 flex -space-x-3\">\n            {[...Array(4)].map((_, i) => (\n// error: Unsafe spread of an `any` value in an array.\n              <div\n                key={i}\n```\n```tsx\n      {/* Bento Grid Skeleton */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {[...Array(4)].map((_, i) => (\n// error: Unsafe spread of an `any` value in an array.\n          <div\n            key={i}\n```\n```tsx\n            </div>\n            <div className=\"space-y-3\">\n              {[...Array(2)].map((_, j) => (\n// error: Unsafe spread of an `any` value in an array.\n                <div\n                  key={j}\n```\n\nplease fix the diagnostic and make sure the carouselitems are correct\n\n\n\n\n\n\nI'll fix all the diagnostics and ensure the carousel items are correctly implemented:\n\n### 1. First, let's create a proper hook for useOutsideClick:\n\n```tsx\n// src/hooks/use-outside-click.tsx\nimport { useEffect, RefObject } from 'react';\n\nexport function useOutsideClick<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent) => void,\n): void {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n```\n\n### 2. Let's fix the apple-cards-carousel.tsx component:\n\n```tsx\n// src/components/ui/apple-cards-carousel.tsx\n\"use client\";\nimport React, {\n  useEffect,\n  useRef,\n  useState,\n  createContext,\n  useContext,\n} from \"react\";\nimport { X, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { cn } from \"~/lib/utils\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport Image, { type ImageProps } from \"next/image\";\nimport { useOutsideClick } from \"~/hooks/use-outside-click\";\n\nexport type CardType = {\n  src: string;\n  title: string;\n  category: string;\n  content: React.ReactNode;\n};\n\ntype CarouselContextType = {\n  onCardClose: (index: number) => void;\n  currentIndex: number;\n};\n\nexport const CarouselContext = createContext<CarouselContextType>({\n  // Use a no-op function instead of an empty method\n  onCardClose: (_index: number) => { \n    // Intentionally empty\n  },\n  currentIndex: 0,\n});\n\nexport interface CarouselProps {\n  items?: React.ReactNode[];\n  initialScroll?: number;\n}\n\nexport const Carousel = ({ items = [], initialScroll = 0 }: CarouselProps) => {\n  const carouselRef = React.useRef<HTMLDivElement>(null);\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(true);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollLeft = initialScroll;\n      checkScrollability();\n    }\n  }, [initialScroll]);\n\n  const checkScrollability = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current;\n      setCanScrollLeft(scrollLeft > 0);\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth);\n    }\n  };\n\n  const scrollLeft = () => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({ left: -300, behavior: \"smooth\" });\n    }\n  };\n\n  const scrollRight = () => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({ left: 300, behavior: \"smooth\" });\n    }\n  };\n\n  const handleCardClose = (index: number) => {\n    if (carouselRef.current) {\n      const cardWidth = isMobile() ? 230 : 384; // (md:w-96)\n      const gap = isMobile() ? 4 : 8;\n      const scrollPosition = (cardWidth + gap) * (index + 1);\n      carouselRef.current.scrollTo({\n        left: scrollPosition,\n        behavior: \"smooth\",\n      });\n      setCurrentIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    if (typeof window !== 'undefined') {\n      return window.innerWidth < 768;\n    }\n    return false;\n  };\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClose: handleCardClose, currentIndex }}\n    >\n      <div className=\"relative w-full\">\n        <div\n          className=\"flex w-full overflow-x-scroll overscroll-x-auto scroll-smooth py-10 [scrollbar-width:none] md:py-20\"\n          ref={carouselRef}\n          onScroll={checkScrollability}\n        >\n          <div\n            className={cn(\n              \"absolute right-0 z-[1000] h-auto w-[5%] overflow-hidden bg-gradient-to-l\",\n            )}\n          ></div>\n\n          <div\n            className={cn(\n              \"flex flex-row justify-start gap-4 pl-4\",\n              \"mx-auto max-w-7xl\", // remove max-w-4xl if you want the carousel to span the full width of its container\n            )}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                initial={{\n                  opacity: 0,\n                  y: 20,\n                }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: {\n                    duration: 0.5,\n                    delay: 0.2 * index,\n                    ease: \"easeOut\",\n                  },\n                }}\n                key={`card-${index}`}\n                className=\"rounded-3xl last:pr-[5%] md:last:pr-[33%]\"\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n        <div className=\"mr-10 flex justify-end gap-2\">\n          <button\n            className=\"relative z-40 flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 disabled:opacity-50\"\n            onClick={scrollLeft}\n            disabled={!canScrollLeft}\n          >\n            <ChevronLeft className=\"h-6 w-6 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 flex h-10 w-10 items-center justify-center rounded-full bg-gray-100 disabled:opacity-50\"\n            onClick={scrollRight}\n            disabled={!canScrollRight}\n          >\n            <ChevronRight className=\"h-6 w-6 text-gray-500\" />\n          </button>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  );\n};\n\ninterface CardProps {\n  card: CardType;\n  index: number;\n  layout?: boolean;\n}\n\nexport const Card = ({ card, index, layout = false }: CardProps) => {\n  const [open, setOpen] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { onCardClose, currentIndex } = useContext(CarouselContext);\n\n  useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (event.key === \"Escape\") {\n        handleClose();\n      }\n    }\n\n    if (open) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\n  }, [open]);\n\n  useOutsideClick(containerRef, () => handleClose());\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    onCardClose(index);\n  };\n\n  return (\n    <>\n      <AnimatePresence>\n        {open && (\n          <div className=\"fixed inset-0 z-50 h-screen overflow-auto\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 h-full w-full bg-black/80 backdrop-blur-lg\"\n            />\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              ref={containerRef}\n              layoutId={layout ? `card-${card.title}` : undefined}\n              className=\"relative z-[60] mx-auto my-10 h-fit max-w-5xl rounded-3xl bg-white p-4 font-sans dark:bg-neutral-900 md:p-10\"\n            >\n              <button\n                className=\"sticky right-0 top-4 ml-auto flex h-8 w-8 items-center justify-center rounded-full bg-black dark:bg-white\"\n                onClick={handleClose}\n              >\n                <X className=\"h-6 w-6 text-neutral-100 dark:text-neutral-900\" />\n              </button>\n              <motion.p\n                layoutId={layout ? `category-${card.title}` : undefined}\n                className=\"text-base font-medium text-black dark:text-white\"\n              >\n                {card.category}\n              </motion.p>\n              <motion.p\n                layoutId={layout ? `title-${card.title}` : undefined}\n                className=\"mt-4 text-2xl font-semibold text-neutral-700 dark:text-white md:text-5xl\"\n              >\n                {card.title}\n              </motion.p>\n              <div className=\"py-10\">{card.content}</div>\n            </motion.div>\n          </div>\n        )}\n      </AnimatePresence>\n      <motion.button\n        layoutId={layout ? `card-${card.title}` : undefined}\n        onClick={handleOpen}\n        className=\"relative z-10 flex h-80 w-56 flex-col items-start justify-start overflow-hidden rounded-3xl bg-gray-100 dark:bg-neutral-900 md:h-[40rem] md:w-96\"\n      >\n        <div className=\"pointer-events-none absolute inset-x-0 top-0 z-30 h-full bg-gradient-to-b from-black/50 via-transparent to-transparent\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.category}` : undefined}\n            className=\"text-left font-sans text-sm font-medium text-white md:text-base\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.title}` : undefined}\n            className=\"mt-2 max-w-xs text-left font-sans text-xl font-semibold text-white [text-wrap:balance] md:text-3xl\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={card.src}\n          alt={card.title}\n          fill\n          className=\"absolute inset-0 z-10 object-cover\"\n        />\n      </motion.button>\n    </>\n  );\n};\n\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true);\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className,\n      )}\n      onLoad={() => setLoading(false)}\n      src={src}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  );\n};\n```\n\n### 3. Now let's fix the page.tsx file with all the diagnostics fixed:\n\n```tsx\n// src/app/(public)/studio/[slug]/page.tsx\nimport { Suspense } from \"react\";\nimport { notFound } from \"next/navigation\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport {\n  MapPin,\n  Clock,\n  Calendar,\n  Users,\n  Music,\n  ArrowRight,\n} from \"lucide-react\";\nimport { Button } from \"~/components/ui/button\";\nimport { Card as UICard } from \"~/components/ui/card\";\nimport { Badge } from \"~/components/ui/badge\";\nimport { api } from \"~/trpc/server\";\nimport { formatAddress } from \"~/lib/format-address\";\nimport { formatOpeningHours } from \"~/lib/format-opening-hours\";\nimport { AnimatedTestimonialsWrapper } from \"~/components/client/animated-testimonials-wrapper\";\nimport { Carousel, Card, type CardType } from \"~/components/ui/apple-cards-carousel\";\n\ninterface StudioProfileProps {\n  slug: string;\n}\n\nconst dummyImageSrc =\n  \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\";\n\nconst carouselItems: CardType[] = [\n  {\n    src: dummyImageSrc,\n    title: \"Hip Hop Dance Class\",\n    category: \"Weekly Classes\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Join our energetic hip hop classes where you&apos;ll learn modern dance\n          moves and techniques. Perfect for beginners and intermediate dancers\n          looking to improve their style.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Every Tuesday and Thursday evening, led by our expert instructors with years of experience\n          in competitive hip hop.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Ballet Fundamentals\",\n    category: \"Beginner Series\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Learn the foundations of classical ballet in our beginner-friendly course.\n          Focus on proper technique, posture, and basic movements.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          A six-week program designed to build confidence and grace in every dancer.\n          No previous experience required.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Latin Dance Workshop\",\n    category: \"Special Event\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Immerse yourself in the passionate world of Latin dance with our weekend workshop.\n          Covering salsa, bachata, and merengue in a fun, welcoming environment.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Bring a partner or come solo - we&apos;ll make sure everyone has a great\n          time and learns the essential rhythms and steps of Latin dance.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Contemporary Fusion\",\n    category: \"Advanced Class\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Explore the boundaries of movement in our contemporary fusion class. Combining elements\n          of modern, jazz, and ballet into expressive choreography.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          For intermediate and advanced dancers looking to challenge themselves and develop\n          their unique style and artistic voice.\n        </p>\n      </div>\n    ),\n  },\n  {\n    src: dummyImageSrc,\n    title: \"Kids Dance Classes\",\n    category: \"Youth Program\",\n    content: (\n      <div className=\"space-y-6\">\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Give your child the gift of dance with our specially designed youth program.\n          Fun, engaging sessions that develop coordination, confidence, and creativity.\n        </p>\n        <p className=\"text-lg leading-relaxed text-gray-700 dark:text-gray-300\">\n          Age-appropriate classes for children 5-12, focusing on fundamentals across multiple\n          dance styles in a supportive, encouraging environment.\n        </p>\n      </div>\n    ),\n  },\n];\n\nasync function StudioProfile({ slug }: StudioProfileProps) {\n  const studio = await api.studio.findUnique({ slug });\n\n  if (!studio) {\n    notFound();\n  }\n\n  // Format opening hours if they exist\n  const formattedHours = studio.openingHours\n    ? formatOpeningHours(studio.openingHours)\n    : null;\n\n  // Create card elements for the carousel\n  const cardElements = carouselItems.map((card, index) => (\n    <Card key={`carousel-card-${index}`} card={card} index={index} layout={true} />\n  ));\n\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Studio Header */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center md:justify-between\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"relative h-20 w-20 overflow-hidden rounded-xl border border-neutral-200 bg-white shadow-sm dark:border-neutral-800 dark:bg-neutral-900 sm:h-24 sm:w-24\">\n              {studio.logo ? (\n                <Image\n                  src={studio.logo}\n                  alt={`${studio.name} logo`}\n                  fill\n                  className=\"object-cover\"\n                />\n              ) : (\n                <div className=\"flex h-full w-full items-center justify-center bg-neutral-100 dark:bg-neutral-800\">\n                  <span className=\"text-2xl font-bold text-neutral-500 dark:text-neutral-400\">\n                    {studio.name.charAt(0)}\n                  </span>\n                </div>\n              )}\n            </div>\n            <div>\n              <div className=\"flex items-center gap-3\">\n                <h1 className=\"text-3xl font-bold text-neutral-900 dark:text-white\">\n                  {studio.name}\n                </h1>\n                {studio.isActive && (\n                  <Badge\n                    variant=\"outline\"\n                    className=\"border-green-500 text-green-600 dark:text-green-400\"\n                  >\n                    Active\n                  </Badge>\n                )}\n              </div>\n              <p className=\"mt-1 text-neutral-600 dark:text-neutral-400\">\n                {studio.description ?? \"Welcome to our dance studio!\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <AnimatedTestimonialsWrapper\n        testimonials={[\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n          {\n            quote: \"Welcome to our dance studio!\",\n            name: \"User Name\",\n            designation: \"asdasdas\",\n            src: \"http://localhost:54321/storage/v1/object/public/studio-assets/private/groove-central-studio/logos/d4abe877-21dd-4cc6-ba08-ff2649b7cd49.JPG\",\n          },\n        ]}\n      />\n\n      <Carousel items={cardElements} />\n\n      {/* Bento Grid Layout - Rearranged order */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {/* Studio Atmosphere Card - Now first */}\n        <UICard className=\"col-span-1 h-auto border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Music className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Studio Atmosphere\n            </h3>\n          </div>\n          <p className=\"line-clamp-3 text-neutral-700 dark:text-neutral-300\">\n            Experience a welcoming environment with state-of-the-art facilities,\n            professional sound systems, and spacious dance floors.\n          </p>\n          <div className=\"mt-4 grid grid-cols-3 gap-2\">\n            {Array.from({ length: 3 }).map((_, i) => (\n              <div\n                key={`atmosphere-img-${i}`}\n                className=\"aspect-square overflow-hidden rounded-lg bg-neutral-100 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-neutral-400 dark:text-neutral-600\">\n                  <span className=\"text-xs\">Image</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </UICard>\n\n        {/* Location Card - Now second */}\n        <UICard className=\"col-span-1 flex h-auto flex-col justify-between border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <MapPin className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Location\n              </h3>\n            </div>\n            <div className=\"text-neutral-700 dark:text-neutral-300\">\n              <p className=\"font-medium\">{formatAddress(studio)}</p>\n              {studio.countryName && (\n                <p className=\"mt-1 text-sm text-neutral-500 dark:text-neutral-400\">\n                  {studio.stateName ?? \"\"} {studio.countryName}\n                </p>\n              )}\n            </div>\n          </div>\n          <a\n            href={`https://maps.google.com/?q=${formatAddress(studio)}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mt-4 inline-block text-sm font-medium text-indigo-600 hover:text-indigo-700 hover:underline dark:text-indigo-400 dark:hover:text-indigo-300\"\n          >\n            View on map →\n          </a>\n        </UICard>\n\n        {/* Professional Instructors Card - Now third */}\n        <UICard className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div className=\"mb-4 flex items-center gap-2\">\n            <Users className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n            <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n              Professional Instructors\n            </h3>\n          </div>\n          <p className=\"text-neutral-700 dark:text-neutral-300\">\n            Learn from our team of experienced and passionate dance instructors,\n            each specialized in their own dance styles.\n          </p>\n          <div className=\"mt-4 flex -space-x-3\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div\n                key={`instructor-${i}`}\n                className=\"relative h-10 w-10 overflow-hidden rounded-full border-2 border-white bg-neutral-100 dark:border-neutral-900 dark:bg-neutral-800\"\n              >\n                <div className=\"flex h-full w-full items-center justify-center text-sm font-medium text-neutral-500 dark:text-neutral-400\">\n                  {String.fromCharCode(65 + i)}\n                </div>\n              </div>\n            ))}\n            <div className=\"relative flex h-10 w-10 items-center justify-center rounded-full border-2 border-white bg-indigo-100 text-sm font-medium text-indigo-600 dark:border-neutral-900 dark:bg-indigo-900 dark:text-indigo-300\">\n              +3\n            </div>\n          </div>\n        </UICard>\n\n        {/* Opening Hours Card - Now last */}\n        <UICard className=\"col-span-1 flex h-auto flex-col border border-neutral-200 p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800\">\n          <div>\n            <div className=\"mb-4 flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n              <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-white\">\n                Opening Hours\n              </h3>\n            </div>\n            {formattedHours ? (\n              <div className=\"text-neutral-700 dark:text-neutral-300\">\n                <div className=\"max-h-[200px] overflow-y-auto pr-2\">\n                  {formattedHours.map((day) => (\n                    <div key={day.day} className=\"flex justify-between py-1\">\n                      <span className=\"font-medium\">{day.day}</span>\n                      <span className=\"text-right\">{day.hours}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <p className=\"text-neutral-600 dark:text-neutral-400\">\n                Hours not available\n              </p>\n            )}\n          </div>\n        </UICard>\n      </div>\n\n      {/* Option 2: Full-width button at the bottom */}\n      <div className=\"mt-10\">\n        <Link href={`/studio/${slug}/schedules`}>\n          <Button className=\"group relative w-full overflow-hidden bg-indigo-600 py-7 text-lg font-medium text-white transition-all hover:bg-indigo-700 dark:bg-indigo-700 dark:hover:bg-indigo-600\">\n            <span className=\"flex items-center justify-center gap-3\">\n              <Calendar className=\"h-5 w-5\" />\n              <span>Discover Dance Classes</span>\n              <ArrowRight className=\"h-5 w-5 transition-transform duration-300 group-hover:translate-x-2\" />\n            </span>\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\ntype StudioPageProps = {\n  params: {\n    slug: string;\n  };\n};\n\nexport default async function StudioPage({ params }: StudioPageProps) {\n  const { slug } = params;\n\n  // Prefetch the data to improve performance\n  await api.studio.findUnique.prefetch({ slug });\n\n  return (\n    <main className=\"min-h-screen bg-white dark:bg-neutral-950\">\n      <Suspense fallback={<StudioProfileSkeleton />}>\n        <StudioProfile slug={slug} />\n      </Suspense>\n    </main>\n  );\n}\n\nfunction StudioProfileSkeleton() {\n  return (\n    <div className=\"mx-auto max-w-7xl px-4 pb-20 pt-12 md:px-8\">\n      {/* Header Skeleton */}\n      <div className=\"mb-12\">\n        <div className=\"flex flex-col items-start gap-6 md:flex-row md:items-center\">\n          <div className=\"flex items-center gap-5\">\n            <div className=\"h-20 w-20 animate-pulse rounded-xl bg-neutral-200 dark:bg-neutral-800 sm:h-24 sm:w-24\" />\n            <div>\n              <div className=\"h-8 w-48 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"mt-2 h-4 w-64 animate-pulse rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Classes Card Skeleton */}\n      <div className=\"mb-6 h-24 animate-pulse rounded-xl border border-neutral-200 bg-neutral-200 dark:border-neutral-800 dark:bg-neutral-800\" />\n\n      {/* Bento Grid Skeleton */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-3\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <div\n            key={`skeleton-card-${i}`}\n            className=\"h-auto animate-pulse rounded-xl border border-neutral-200 p-6 dark:border-neutral-800\"\n          >\n            <div className=\"mb-4 flex items-center gap-2\">\n              <div className=\"h-5 w-5 rounded-full bg-neutral-200 dark:bg-neutral-800\" />\n              <div className=\"h-5 w-24 rounded bg-neutral-200 dark:bg-neutral-800\" />\n            </div>\n            <div className=\"space-y-3\">\n              {Array.from({ length: 2 }).map((_, j) => (\n                <div\n                  key={`skeleton-text-${i}-${j}`}\n                  className=\"h-4 w-full rounded bg-neutral-200 dark:bg-neutral-800\"\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Button Skeleton at bottom */}\n      <div className=\"mt-10 h-14 animate-pulse rounded-md bg-neutral-200 dark:bg-neutral-800\" />\n    </div>\n  );\n}\n```\n\n### 4. Fix the format-opening-hours.ts file:\n\n```tsx\n// src/lib/format-opening-hours.ts\nexport interface FormattedDay {\n  day: string;\n  hours: string;\n}\n\nexport interface OpeningHoursType {\n  [key: string]: {\n    open: string;\n    close: string;\n    isClosed: boolean;\n  };\n}\n\nexport function formatOpeningHours(hours: unknown): FormattedDay[] {\n  // Handle the case where hours might be a string (from JSON.stringify)\n  const openingHours: OpeningHoursType = \n    typeof hours === \"string\" \n      ? JSON.parse(hours) as OpeningHoursType \n      : hours as OpeningHoursType;\n\n  if (!openingHours || typeof openingHours !== \"object\") {\n    return [];\n  }\n\n  // Define the days of the week in order\n  const daysOfWeek = [\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\",\n    \"sunday\",\n  ];\n\n  // Format the\n\n\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2445}}},{"id":{"replica_id":0,"value":35},"start":19076,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2446}}},{"id":{"replica_id":0,"value":121},"start":113089,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":2447}}},{"id":{"replica_id":0,"value":122},"start":115142,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2448}}},{"id":{"replica_id":0,"value":198},"start":115203,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2449}}},{"id":{"replica_id":0,"value":276},"start":115250,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":2450}}},{"id":{"replica_id":0,"value":277},"start":118198,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2451}}},{"id":{"replica_id":0,"value":679},"start":139629,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":2452}}},{"id":{"replica_id":0,"value":680},"start":145992,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2453}}},{"id":{"replica_id":0,"value":1137},"start":170824,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2454}}},{"id":{"replica_id":0,"value":1380},"start":177720,"metadata":{"role":"assistant","status":"Canceled","timestamp":{"replica_id":0,"value":2455}}},{"id":{"replica_id":0,"value":1381},"start":177721,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2456}}},{"id":{"replica_id":0,"value":1407},"start":177722,"metadata":{"role":"assistant","status":"Canceled","timestamp":{"replica_id":0,"value":2457}}},{"id":{"replica_id":0,"value":1408},"start":177723,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2458}}},{"id":{"replica_id":0,"value":1439},"start":177724,"metadata":{"role":"assistant","status":"Canceled","timestamp":{"replica_id":0,"value":2459}}},{"id":{"replica_id":0,"value":1440},"start":177725,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2460}}},{"id":{"replica_id":0,"value":1522},"start":177726,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":2461}}},{"id":{"replica_id":0,"value":1523},"start":204813,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2462}}},{"id":{"replica_id":0,"value":2443},"start":204814,"metadata":{"role":"assistant","status":{"Error":"failed to stream completion\nan error occurred while interacting with the Anthropic API: invalid_request_error: messages: final assistant content cannot end with trailing whitespace"},"timestamp":{"replica_id":0,"value":2465}}},{"id":{"replica_id":0,"value":2444},"start":204815,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":2464}}}],"summary":"Fix AnimatedTestimonials component hydration mismatch","slash_command_output_sections":[{"range":{"start":0,"end":1276},"icon":"Library","label":"Default","metadata":null},{"range":{"start":1,"end":1275},"icon":"Library","label":"General","metadata":null},{"range":{"start":1277,"end":5325},"icon":"Library","label":"next-tw-zod-zustand-shad","metadata":null},{"range":{"start":5326,"end":17100},"icon":"File","label":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx","metadata":{"path":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx"}},{"range":{"start":19076,"end":113017},"icon":"Folder","label":"dance-book-app/src/components/ui","metadata":null},{"range":{"start":19109,"end":23603},"icon":"File","label":"dance-book-app/src/components/ui/alert-dialog.tsx","metadata":{"path":"dance-book-app/src/components/ui/alert-dialog.tsx"}},{"range":{"start":23604,"end":29038},"icon":"File","label":"dance-book-app/src/components/ui/animated-testimonials.tsx","metadata":{"path":"dance-book-app/src/components/ui/animated-testimonials.tsx"}},{"range":{"start":29039,"end":30513},"icon":"File","label":"dance-book-app/src/components/ui/avatar.tsx","metadata":{"path":"dance-book-app/src/components/ui/avatar.tsx"}},{"range":{"start":30514,"end":31708},"icon":"File","label":"dance-book-app/src/components/ui/badge.tsx","metadata":{"path":"dance-book-app/src/components/ui/badge.tsx"}},{"range":{"start":31709,"end":34480},"icon":"File","label":"dance-book-app/src/components/ui/breadcrumb.tsx","metadata":{"path":"dance-book-app/src/components/ui/breadcrumb.tsx"}},{"range":{"start":34481,"end":36438},"icon":"File","label":"dance-book-app/src/components/ui/button.tsx","metadata":{"path":"dance-book-app/src/components/ui/button.tsx"}},{"range":{"start":36439,"end":39445},"icon":"File","label":"dance-book-app/src/components/ui/calendar.tsx","metadata":{"path":"dance-book-app/src/components/ui/calendar.tsx"}},{"range":{"start":39446,"end":41327},"icon":"File","label":"dance-book-app/src/components/ui/card.tsx","metadata":{"path":"dance-book-app/src/components/ui/card.tsx"}},{"range":{"start":41328,"end":41717},"icon":"File","label":"dance-book-app/src/components/ui/collapsible.tsx","metadata":{"path":"dance-book-app/src/components/ui/collapsible.tsx"}},{"range":{"start":41718,"end":46661},"icon":"File","label":"dance-book-app/src/components/ui/command.tsx","metadata":{"path":"dance-book-app/src/components/ui/command.tsx"}},{"range":{"start":46662,"end":50566},"icon":"File","label":"dance-book-app/src/components/ui/dialog.tsx","metadata":{"path":"dance-book-app/src/components/ui/dialog.tsx"}},{"range":{"start":50567,"end":53643},"icon":"File","label":"dance-book-app/src/components/ui/drawer.tsx","metadata":{"path":"dance-book-app/src/components/ui/drawer.tsx"}},{"range":{"start":53644,"end":61122},"icon":"File","label":"dance-book-app/src/components/ui/dropdown-menu.tsx","metadata":{"path":"dance-book-app/src/components/ui/dropdown-menu.tsx"}},{"range":{"start":61123,"end":65313},"icon":"File","label":"dance-book-app/src/components/ui/form.tsx","metadata":{"path":"dance-book-app/src/components/ui/form.tsx"}},{"range":{"start":65314,"end":66571},"icon":"File","label":"dance-book-app/src/components/ui/hover-card.tsx","metadata":{"path":"dance-book-app/src/components/ui/hover-card.tsx"}},{"range":{"start":66572,"end":67394},"icon":"File","label":"dance-book-app/src/components/ui/input.tsx","metadata":{"path":"dance-book-app/src/components/ui/input.tsx"}},{"range":{"start":67395,"end":68173},"icon":"File","label":"dance-book-app/src/components/ui/label.tsx","metadata":{"path":"dance-book-app/src/components/ui/label.tsx"}},{"range":{"start":68174,"end":69536},"icon":"File","label":"dance-book-app/src/components/ui/popover.tsx","metadata":{"path":"dance-book-app/src/components/ui/popover.tsx"}},{"range":{"start":69537,"end":70394},"icon":"File","label":"dance-book-app/src/components/ui/progress.tsx","metadata":{"path":"dance-book-app/src/components/ui/progress.tsx"}},{"range":{"start":70395,"end":72111},"icon":"File","label":"dance-book-app/src/components/ui/scroll-area.tsx","metadata":{"path":"dance-book-app/src/components/ui/scroll-area.tsx"}},{"range":{"start":72112,"end":77806},"icon":"File","label":"dance-book-app/src/components/ui/select.tsx","metadata":{"path":"dance-book-app/src/components/ui/select.tsx"}},{"range":{"start":77807,"end":78635},"icon":"File","label":"dance-book-app/src/components/ui/separator.tsx","metadata":{"path":"dance-book-app/src/components/ui/separator.tsx"}},{"range":{"start":78636,"end":82970},"icon":"File","label":"dance-book-app/src/components/ui/sheet.tsx","metadata":{"path":"dance-book-app/src/components/ui/sheet.tsx"}},{"range":{"start":82971,"end":106598},"icon":"File","label":"dance-book-app/src/components/ui/sidebar.tsx","metadata":{"path":"dance-book-app/src/components/ui/sidebar.tsx"}},{"range":{"start":106599,"end":106922},"icon":"File","label":"dance-book-app/src/components/ui/skeleton.tsx","metadata":{"path":"dance-book-app/src/components/ui/skeleton.tsx"}},{"range":{"start":106923,"end":107872},"icon":"File","label":"dance-book-app/src/components/ui/sonner.tsx","metadata":{"path":"dance-book-app/src/components/ui/sonner.tsx"}},{"range":{"start":107873,"end":109090},"icon":"File","label":"dance-book-app/src/components/ui/switch.tsx","metadata":{"path":"dance-book-app/src/components/ui/switch.tsx"}},{"range":{"start":109091,"end":111035},"icon":"File","label":"dance-book-app/src/components/ui/tabs.tsx","metadata":{"path":"dance-book-app/src/components/ui/tabs.tsx"}},{"range":{"start":111036,"end":111742},"icon":"File","label":"dance-book-app/src/components/ui/textarea.tsx","metadata":{"path":"dance-book-app/src/components/ui/textarea.tsx"}},{"range":{"start":111743,"end":113016},"icon":"File","label":"dance-book-app/src/components/ui/tooltip.tsx","metadata":{"path":"dance-book-app/src/components/ui/tooltip.tsx"}},{"range":{"start":118198,"end":130650},"icon":"File","label":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx","metadata":{"path":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx"}},{"range":{"start":130651,"end":139532},"icon":"File","label":"dance-book-app/src/components/ui/apple-cards-carousel.tsx","metadata":{"path":"dance-book-app/src/components/ui/apple-cards-carousel.tsx"}},{"range":{"start":145992,"end":161892},"icon":"File","label":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx","metadata":{"path":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx"}},{"range":{"start":161893,"end":170774},"icon":"File","label":"dance-book-app/src/components/ui/apple-cards-carousel.tsx","metadata":{"path":"dance-book-app/src/components/ui/apple-cards-carousel.tsx"}},{"range":{"start":170824,"end":177649},"icon":"Warning","label":"Diagnostics: 12 errors","metadata":null},{"range":{"start":170836,"end":171271},"icon":"File","label":"dance-book-app/src/lib/format-opening-hours.ts","metadata":null},{"range":{"start":170883,"end":171271},"icon":"XCircle","label":"Unsafe assignment of an `any` value.","metadata":null},{"range":{"start":171272,"end":171466},"icon":"File","label":"dance-book-app/src/components/ui/apple-cards-carousel.tsx","metadata":null},{"range":{"start":171330,"end":171466},"icon":"XCircle","label":"Unexpected empty method 'onCardClose'.","metadata":null},{"range":{"start":171467,"end":174557},"icon":"File","label":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx","metadata":null},{"range":{"start":171522,"end":171920},"icon":"XCircle","label":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","metadata":null},{"range":{"start":171921,"end":172265},"icon":"XCircle","label":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","metadata":null},{"range":{"start":172266,"end":172799},"icon":"XCircle","label":"Type '{ key: string; card: { src: string; title: string; category: string; content: Element; }; index: number; layout: boolean; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.\n  Property 'card' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.","metadata":null},{"range":{"start":172800,"end":173131},"icon":"XCircle","label":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","metadata":null},{"range":{"start":173132,"end":173312},"icon":"XCircle","label":"Property 'items' is missing in type '{}' but required in type 'CarouselProps'.","metadata":null},{"range":{"start":173313,"end":173535},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":173536,"end":173888},"icon":"XCircle","label":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","metadata":null},{"range":{"start":173889,"end":174104},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":174105,"end":174340},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":174341,"end":174557},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":174558,"end":177648},"icon":"File","label":"dance-book-app/src/app/(public)/studio/[slug]/page.tsx","metadata":null},{"range":{"start":174613,"end":175011},"icon":"XCircle","label":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","metadata":null},{"range":{"start":175012,"end":175356},"icon":"XCircle","label":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","metadata":null},{"range":{"start":175357,"end":175890},"icon":"XCircle","label":"Type '{ key: string; card: { src: string; title: string; category: string; content: Element; }; index: number; layout: boolean; }' is not assignable to type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.\n  Property 'card' does not exist on type 'IntrinsicAttributes & HTMLAttributes<HTMLDivElement> & RefAttributes<HTMLDivElement>'.","metadata":null},{"range":{"start":175891,"end":176222},"icon":"XCircle","label":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","metadata":null},{"range":{"start":176223,"end":176403},"icon":"XCircle","label":"Property 'items' is missing in type '{}' but required in type 'CarouselProps'.","metadata":null},{"range":{"start":176404,"end":176626},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":176627,"end":176979},"icon":"XCircle","label":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","metadata":null},{"range":{"start":176980,"end":177195},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":177196,"end":177431},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null},{"range":{"start":177432,"end":177648},"icon":"XCircle","label":"Unsafe spread of an `any` value in an array.","metadata":null}]}